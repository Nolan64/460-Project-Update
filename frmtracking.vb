' ++++++++++++++++++++++++++++++++++++++++++++++++++
' This code is generated by a tool and is provided "as is", without warranty of any kind,
' express or implied, including but not limited to the warranties of merchantability,
' fitness for a particular purpose and non-infringement.
' In no event shall the authors or copyright holders be liable for any claim, damages or
' other liability, whether in an action of contract, tort or otherwise, arising from,
' out of or in connection with the software or the use or other dealings in the software.
' ++++++++++++++++++++++++++++++++++++++++++++++++++
'

Imports System.ComponentModel
Imports System.Data.Entity.Core.Objects
Imports System.Data.Entity

Namespace DatabaseTestApplication2
	
	Public Class frmtracking
		
		Private ctx As mydbEntities
		
		Private Sub Form1_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load
			ctx = new mydbEntities()
			ctx.trackings.Load()
			Dim _entities As BindingList(Of tracking) = ctx.trackings.Local.ToBindingList()
			trackingBindingSource.DataSource = _entities
			Me.sweatEquityDate_dateTimePicker.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "sweatEquityDate", True ))
			Me.sweatEquityAmountTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "sweatEquityAmount", True ))
			Me.monthlyDepositDate_dateTimePicker.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "monthlyDepositDate", True ))
			Me.monthlyDepositAmountTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "monthlyDepositAmount", True ))
			Me.HUDHoursDate_dateTimePicker.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "HUDHoursDate", True ))
			Me.HUDHoursCompleteTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "HUDHoursComplete", True ))
			Me.financeClassesDate_dateTimePicker.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "financeClassesDate", True ))
			Me.financeClassesCompleteTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "financeClassesComplete", True ))
			Me.homebuyerEducationDate_dateTimePicker.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "homebuyerEducationDate", True ))
			Me.homebuyerEducationAmountTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "homebuyerEducationAmount", True ))
			Me.mortgage1PriceTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "mortgage1Price", True ))
			Me.ComboBox1.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "mortgage1Bank", True))
			Me.mortgage1ForgivableTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "mortgage1Forgivable", True ))
			Me.mortgage1OriginalBalanceTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "mortgage1OriginalBalance", True ))
			Me.mortgage1NumberOfYearsTextBox.DataBindings.Add(New System.Windows.Forms.Binding("Text", Me.trackingBindingSource, "mortgage1NumberOfYears", True ))
			Me.general_UID_comboBox.DataSource = ctx.generals.ToList()
			Me.general_UID_comboBox.DisplayMember = "UID"
			Me.general_UID_comboBox.ValueMember = "UID"
			Me.general_UID_comboBox.DataBindings.Add(New System.Windows.Forms.Binding("SelectedValue", Me.trackingBindingSource, "general_UID", True))
		End Sub
		
		Private Sub ToolStripButton1_Click(sender As System.Object, e As System.EventArgs) Handles ToolStripButton1.Click
			If Not Me.Validate() Then
				Return
			End If
			trackingBindingSource.EndEdit()
			ctx.SaveChanges()
		End Sub
		
		Private Sub Form1_FormClosing(sender As System.Object, e As System.Windows.Forms.FormClosingEventArgs) Handles MyBase.FormClosing
			e.Cancel = False
		End Sub

		Private Sub sweatEquityAmountTextBox_Validating(sender As Object, e As CancelEventArgs) Handles sweatEquityAmountTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(sweatEquityAmountTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(sweatEquityAmountTextBox, "The field sweatEquityAmount is required")
			End If
			Dim v As Integer
			Dim s As String = sweatEquityAmountTextBox.Text
			If Not Integer.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(sweatEquityAmountTextBox, "The field sweatEquityAmount must be Integer.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(sweatEquityAmountTextBox, "")
			End If
		End Sub

		Private Sub monthlyDepositAmountTextBox_Validating(sender As Object, e As CancelEventArgs) Handles monthlyDepositAmountTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(monthlyDepositAmountTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(monthlyDepositAmountTextBox, "The field monthlyDepositAmount is required")
			End If
			Dim v As Double
			Dim s As String = monthlyDepositAmountTextBox.Text
			If Not Double.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(monthlyDepositAmountTextBox, "The field monthlyDepositAmount must be Double.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(monthlyDepositAmountTextBox, "")
			End If
		End Sub

		Private Sub HUDHoursCompleteTextBox_Validating(sender As Object, e As CancelEventArgs) Handles HUDHoursCompleteTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(HUDHoursCompleteTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(HUDHoursCompleteTextBox, "The field HUDHoursComplete is required")
			End If
			Dim v As Integer
			Dim s As String = HUDHoursCompleteTextBox.Text
			If Not Integer.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(HUDHoursCompleteTextBox, "The field HUDHoursComplete must be Integer.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(HUDHoursCompleteTextBox, "")
			End If
		End Sub

		Private Sub financeClassesCompleteTextBox_Validating(sender As Object, e As CancelEventArgs) Handles financeClassesCompleteTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(financeClassesCompleteTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(financeClassesCompleteTextBox, "The field financeClassesComplete is required")
			End If
			Dim v As Integer
			Dim s As String = financeClassesCompleteTextBox.Text
			If Not Integer.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(financeClassesCompleteTextBox, "The field financeClassesComplete must be Integer.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(financeClassesCompleteTextBox, "")
			End If
		End Sub

		Private Sub homebuyerEducationAmountTextBox_Validating(sender As Object, e As CancelEventArgs) Handles homebuyerEducationAmountTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(homebuyerEducationAmountTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(homebuyerEducationAmountTextBox, "The field homebuyerEducationAmount is required")
			End If
			Dim v As Integer
			Dim s As String = homebuyerEducationAmountTextBox.Text
			If Not Integer.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(homebuyerEducationAmountTextBox, "The field homebuyerEducationAmount must be Integer.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(homebuyerEducationAmountTextBox, "")
			End If
		End Sub

		Private Sub mortgage1PriceTextBox_Validating(sender As Object, e As CancelEventArgs) Handles mortgage1PriceTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(mortgage1PriceTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1PriceTextBox, "The field mortgage1Price is required")
			End If
			Dim v As Double
			Dim s As String = mortgage1PriceTextBox.Text
			If Not Double.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1PriceTextBox, "The field mortgage1Price must be Double.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(mortgage1PriceTextBox, "")
			End If
		End Sub

		Private Sub mortgage1BankTextBox_Validating(sender As Object, e As CancelEventArgs) Handles ComboBox1.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(ComboBox1.Text) Then
				e.Cancel = False
				ErrorProvider1.SetError(ComboBox1, "The field mortgage1Bank is required")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(ComboBox1, "")
			End If
		End Sub

		Private Sub mortgage1ForgivableTextBox_Validating(sender As Object, e As CancelEventArgs) Handles mortgage1ForgivableTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(mortgage1ForgivableTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1ForgivableTextBox, "The field mortgage1Forgivable is required")
			End If
			Dim v As Integer
			Dim s As String = mortgage1ForgivableTextBox.Text
			If Not Integer.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1ForgivableTextBox, "The field mortgage1Forgivable must be Integer.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(mortgage1ForgivableTextBox, "")
			End If
		End Sub

		Private Sub mortgage1OriginalBalanceTextBox_Validating(sender As Object, e As CancelEventArgs) Handles mortgage1OriginalBalanceTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(mortgage1OriginalBalanceTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1OriginalBalanceTextBox, "The field mortgage1OriginalBalance is required")
			End If
			Dim v As Double
			Dim s As String = mortgage1OriginalBalanceTextBox.Text
			If Not Double.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1OriginalBalanceTextBox, "The field mortgage1OriginalBalance must be Double.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(mortgage1OriginalBalanceTextBox, "")
			End If
		End Sub

		Private Sub mortgage1NumberOfYearsTextBox_Validating(sender As Object, e As CancelEventArgs) Handles mortgage1NumberOfYearsTextBox.Validating

			e.Cancel = False
			If String.IsNullOrEmpty(mortgage1NumberOfYearsTextBox.Text) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1NumberOfYearsTextBox, "The field mortgage1NumberOfYears is required")
			End If
			Dim v As Integer
			Dim s As String = mortgage1NumberOfYearsTextBox.Text
			If Not Integer.TryParse(s, v) Then
				e.Cancel = True
				ErrorProvider1.SetError(mortgage1NumberOfYearsTextBox, "The field mortgage1NumberOfYears must be Integer.")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(mortgage1NumberOfYearsTextBox, "")
			End If
		End Sub

		Private Sub general_UID_comboBox_Validating(sender As System.Object, e As System.ComponentModel.CancelEventArgs) Handles general_UID_comboBox.Validating
			Dim i As Integer = general_UID_comboBox.SelectedIndex
			e.Cancel = False
			If i = -1 Then
				e.Cancel = True
				ErrorProvider1.SetError(general_UID_comboBox, "Must select a general_UID")
			End If
			If Not e.Cancel Then
				ErrorProvider1.SetError(general_UID_comboBox, "")
			End If
		End Sub

		Private Sub bindingNavigatorAddNewItem_Click(sender As System.Object, e As System.EventArgs) Handles BindingNavigatorAddNewItem.Click
			trackingBindingSource.AddNew()
		End Sub

		Private Sub mortgage1BankTextBox_TextChanged(sender As Object, e As EventArgs)

		End Sub
	End Class
	
End Namespace
